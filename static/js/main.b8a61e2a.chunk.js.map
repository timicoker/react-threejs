{"version":3,"sources":["Main.js","App.js","index.js"],"names":["Main","handleResize","width","mount","clientWidth","height","clientHeight","renderer","setSize","camera","aspect","updateProjectionMatrix","init","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","controls","update","renderScene","window","render","scene","this","THREE","antialias","loader","GLTFLoader","OrbitControls","domElement","light","add","position","z","y","x","load","gltf","model","scale","set","xhr","console","log","loaded","total","error","addEventListener","appendChild","removeEventListener","removeChild","className","ref","Component","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"kUA6FeA,E,4MAxCbC,aAAe,WACb,IAAMC,EAAQ,EAAKC,MAAMC,YACnBC,EAAS,EAAKF,MAAMG,aAC1B,EAAKC,SAASC,QAAQN,EAAOG,GAC7B,EAAKI,OAAOC,OAASR,EAAQG,EAC7B,EAAKI,OAAOE,0B,EAGdC,KAAO,WACA,EAAKC,UACR,EAAKA,QAAUC,sBAAsB,EAAKC,W,EAI9CC,KAAO,WACLC,qBAAqB,EAAKJ,U,EAG5BE,QAAU,WACR,EAAKG,SAASC,SACd,EAAKC,cACL,EAAKP,QAAUQ,OAAOP,sBAAsB,EAAKC,U,EAGnDK,YAAc,WACZ,EAAKb,SAASe,OAAO,EAAKC,MAAO,EAAKd,S,kEAzEnB,IAAD,OACZP,EAAQsB,KAAKrB,MAAMC,YACnBC,EAASmB,KAAKrB,MAAMG,aAE1BkB,KAAKD,MAAQ,IAAIE,QACjBD,KAAKf,OAAS,IAAIgB,oBAAwB,GAAIvB,EAAQG,EAAQ,GAAK,KACnEmB,KAAKjB,SAAW,IAAIkB,gBAAoB,CAAEC,WAAW,IACrDF,KAAKG,OAAS,IAAIC,IAClBJ,KAAKN,SAAW,IAAIW,IAAcL,KAAKf,OAAQe,KAAKjB,SAASuB,YAG7D,IAAMC,EAAQ,IAAIN,kBAAsB,SAAU,OAAU,GAC5DD,KAAKD,MAAMS,IAAID,GAEfP,KAAKf,OAAOwB,SAASC,EAAI,EACzBV,KAAKf,OAAOwB,SAASE,EAAI,GACzBX,KAAKf,OAAOwB,SAASG,EAAI,GAGzBZ,KAAKG,OAAOU,KACV,eACA,SAACC,GAEC,IAAIC,EAAQD,EAAKf,MACjBgB,EAAMC,MAAMC,IAAI,EAAG,EAAG,GACtB,EAAKlB,MAAMS,IAAIO,MAEjB,SAACG,GAECC,QAAQC,IAAR,UAAgBF,EAAIG,OAASH,EAAII,MAAS,IAA1C,gBAEF,SAACC,GAECJ,QAAQI,MAAM,oBAAqBA,MAGvCvB,KAAKjB,SAASC,QAAQN,EAAOG,GAC7BgB,OAAO2B,iBAAiB,SAAUxB,KAAKvB,cACvCuB,KAAKrB,MAAM8C,YAAYzB,KAAKjB,SAASuB,YACrCN,KAAKZ,S,6CAILS,OAAO6B,oBAAoB,UAC3B1B,KAAKR,OACLQ,KAAKrB,MAAMgD,YAAY3B,KAAKjB,SAASuB,c,+BA+B7B,IAAD,OACP,OACE,yBACEsB,UAAU,YACVC,IAAK,SAAClD,GACJ,EAAKA,MAAQA,S,GAlFJmD,aCUJC,E,uKARX,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,W,GAJUE,aCClBE,IAASlC,OACP,kBAAC,IAAMmC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b8a61e2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols';\nimport GLTFLoader from 'three-gltf-loader';\nclass Main extends Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.loader = new GLTFLoader();\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    // Add a light source!!! //\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    this.scene.add(light);\n\n    this.camera.position.z = 2;\n    this.camera.position.y = 0.7;\n    this.camera.position.x = 0.7;\n\n    // Load the model //\n    this.loader.load(\n      './bread.glb',\n      (gltf) => {\n        // called when the resource is loaded\n        var model = gltf.scene;\n        model.scale.set(5, 5, 5);\n        this.scene.add(model);\n      },\n      (xhr) => {\n        // called while loading is progressing\n        console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n      },\n      (error) => {\n        // called when loading has errors\n        console.error('An error happened', error);\n      }\n    );\n    this.renderer.setSize(width, height);\n    window.addEventListener('resize', this.handleResize);\n    this.mount.appendChild(this.renderer.domElement);\n    this.init();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize');\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  handleResize = () => {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n  };\n\n  init = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.controls.update();\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        ref={(mount) => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}